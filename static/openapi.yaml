openapi: "3.0.0"
info:
  title: ArtCenter API
  version: "1.0.0"
  description: Documentación de la API de ArtCenter.
servers:
  - url: http://localhost:5000/api
security:
  - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        msg:
          type: string
    TokenResponse:
      type: object
      properties:
        token:
          type: string
        rol:
          type: string
          enum: [admin, usuario]
        id:
          type: integer
    Message:
      type: object
      properties:
        msg:
          type: string
paths:
  /auth/register:
    post:
      summary: Registro de un nuevo usuario
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, contrasena, username]
              properties:
                email:
                  type: string
                contrasena:
                  type: string
                username:
                  type: string
      responses:
        '201':
          description: Usuario registrado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Datos incompletos o error de validación
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/login:
    post:
      summary: Autenticación y obtención de token JWT
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, contrasena]
              properties:
                email:
                  type: string
                contrasena:
                  type: string
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user:
    get:
      summary: Obtener datos del usuario autenticado
      tags: [Users]
      responses:
        '200':
          description: Información del usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  email:
                    type: string
                  username:
                    type: string
                  urlFotoPerfil:
                    type: string
        '401':
          $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar nombre de usuario
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Nombre de usuario actualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/schemas/Error'
  /user/profile-picture:
    put:
      summary: Actualizar foto de perfil
      tags: [Users]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Foto actualizada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  urlFotoPerfil:
                    type: string
        '500':
          $ref: '#/components/schemas/Error'
  /categorias:
    get:
      summary: Listar todas las categorías
      tags: [Categories]
      responses:
        '200':
          description: Lista de categorías
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nombre:
                      type: string
                    descripcion:
                      type: string
        '401':
          $ref: '#/components/schemas/Error'
    post:
      summary: Crear una nueva categoría (admin)
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [nombre]
              properties:
                nombre:
                  type: string
                descripcion:
                  type: string
      responses:
        '201':
          description: Categoría creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: No autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /categorias/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: ID de la categoría
    get:
      summary: Obtener una categoría por ID
      tags: [Categories]
      responses:
        '200':
          description: Categoría encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  nombre:
                    type: string
                  descripcion:
                    type: string
        '404':
          $ref: '#/components/schemas/Error'
    put:
      summary: Actualizar una categoría (admin)
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                descripcion:
                  type: string
      responses:
        '200':
          description: Categoría actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          $ref: '#/components/schemas/Error'
    delete:
      summary: Eliminar una categoría (admin)
      tags: [Categories]
      responses:
        '200':
          description: Categoría eliminada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          $ref: '#/components/schemas/Error'
  /subcategorias:
    get:
      summary: Listar todas las subcategorías
      tags: [Subcategories]
      responses:
        '200':
          description: Lista de subcategorías
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id_categoria:
                      type: integer
                    id_subcategoria:
                      type: integer
                    nombre:
                      type: string
        '401':
          $ref: '#/components/schemas/Error'
    post:
      summary: Crear una subcategoría (admin)
      tags: [Subcategories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id_categoria, nombre]
              properties:
                id_categoria:
                  type: integer
                nombre:
                  type: string
                historia:
                  type: string
                caracteristicas:
                  type: string
                requerimientos:
                  type: string
                tutoriales:
                  type: string
      responses:
        '201':
          description: Subcategoría creada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /subcategorias/categoria/{id_categoria}:
    get:
      summary: Listar subcategorías por categoría
      tags: [Subcategories]
      parameters:
        - in: path
          name: id_categoria
          schema:
            type: integer
          required: true
          description: ID de la categoría padre
      responses:
        '200':
          description: Lista de subcategorías filtradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategoria'
  /subcategorias/{id_categoria}/{id_subcategoria}:
    parameters:
      - in: path
        name: id_categoria
        schema:
          type: integer
        required: true
      - in: path
        name: id_subcategoria
        schema:
          type: integer
        required: true
    get:
      summary: Obtener subcategoría por ID
      tags: [Subcategories]
      responses:
        '200':
          description: Subcategoría encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategoria'
    put:
      summary: Actualizar subcategoría (admin)
      tags: [Subcategories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subcategoria'
      responses:
        '200':
          description: Subcategoría actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      summary: Eliminar subcategoría (admin)
      tags: [Subcategories]
      responses:
        '200':
          description: Subcategoría eliminada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /publicaciones:
    get:
      summary: Listar todas las publicaciones (paginado)
      tags: [Publications]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: Página de resultados
      responses:
        '200':
          description: Lista de publicaciones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publicacion'
    post:
      summary: Crear una publicación (usuario)
      tags: [Publications]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                id_etiqueta:
                  type: integer
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Publicación creada correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                  urlContenido:
                    type: string
  /publicaciones/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
    get:
      summary: Obtener publicación por ID
      tags: [Publications]
      responses:
        '200':
          description: Publicación encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicacionDetalle'
    delete:
      summary: Eliminar publicación (admin o propietario)
      tags: [Publications]
      responses:
        '200':
          description: Publicación eliminada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /publicaciones/mias:
    get:
      summary: Obtener mis publicaciones
      tags: [Publications]
      responses:
        '200':
          description: Lista de publicaciones propias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publicacion'
  /publicaciones/guardadas:
    get:
      summary: Obtener publicaciones guardadas
      tags: [Publications]
      responses:
        '200':
          description: Lista de publicaciones guardadas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publicacion'
  /publicaciones/{id}/guardar:
    post:
      summary: Guardar publicación
      tags: [Publications]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Publicación guardada correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /publicaciones/{id}/like:
    post:
      summary: Dar like a publicación
      tags: [Publications]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Like registrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /publicaciones/buscar:
    get:
      summary: Buscar publicaciones por término
      tags: [Publications]
      parameters:
        - in: query
          name: q
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Resultados de búsqueda
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publicacion'
        '400':
          $ref: '#/components/schemas/Error'
  /etiquetas:
    get:
      summary: Listar etiquetas
      tags: [Tags]
      responses:
        '200':
          description: Lista de etiquetas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nombre:
                      type: string
  /publicaciones/{id_publicacion}/comentarios:
    get:
      summary: Listar comentarios de una publicación
      tags: [Comments]
      parameters:
        - in: path
          name: id_publicacion
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Lista de comentarios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    contenido:
                      type: string
                    autor_id:
                      type: integer
    post:
      summary: Crear comentario en una publicación
      tags: [Comments]
      parameters:
        - in: path
          name: id_publicacion
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contenido:
                  type: string
      responses:
        '201':
          description: Comentario creado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /comentarios/{id_comentario}:
    delete:
      summary: Eliminar comentario
      tags: [Comments]
      parameters:
        - in: path
          name: id_comentario
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Comentario eliminado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    
